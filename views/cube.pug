doctype html
html
  head
    meta(charset='UTF-8')
    title Rubik's Cube
    // Begin GLSL 3.0 Shader code
    script#vertex-shader(type='x-shader/x-vertex').
      #version 300 es
      in vec4 a_coords;
      in vec4 a_color;
      out vec4 v_color;
      uniform mat4 modelViewMatrix;
      uniform mat4 projectionMatrix;
      uniform int outline_mode;
      void main() {
      if (outline_mode == 1) {
      v_color = vec4(0.0,0.0,0.0,1.0);
      }
      else {
      v_color = a_color;
      }
      gl_Position = projectionMatrix * modelViewMatrix * a_coords;
      }
    script#fragment-shader(type='x-shader/x-fragment').
      #version 300 es
      precision mediump float;
      in vec4 v_color;
      out vec4 f_color;
      void main() {
      f_color = v_color;
      }
    // End GLSL 3.0 Shader code
    // JS include files
    script(type='text/javascript' src='../javascripts/utils.js')
    script(type='text/javascript' src='../javascripts/rubik-helper.js')
    script(type='text/javascript' src='../javascripts/cube.js')
  body(onload='init();')
    h2 Rubik's Cube
    // The style for the canvas should make the other HTML elements appear to its right
    canvas#gl-canvas(style='float:left; margin-right: 5px;' width='850' height='850')
      | Oops ... your browser doesn't support the HTML5 canvas element
    p
      button#xButton Rotate X
      button#yButton Rotate Y
      button#zButton Rotate Z
      button#ResetButton Reset
    p
      button#RButton R rotation
      button#rButton r rotation
    p
      button#LButton L rotation
      button#lButton l rotation
    p
      button#UButton U rotation
      button#uButton u rotation
    p
      button#DButton D rotation
      button#dButton d rotation
    p
      button#FButton F rotation
      button#fButton f rotation
    p
      button#BButton B rotation
      button#bButton b rotation
    p
      button#RandomButton Random rotation
      button#ScrambleButton Scramble cube
